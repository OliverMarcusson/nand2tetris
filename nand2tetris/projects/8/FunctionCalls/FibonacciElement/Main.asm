// Function Main.fibonacci
(Main.fibonacci)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Pushing constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// Arithmetic: lt
@0
M=M-1
@0
A=M-1
D=M
@0
A=M
D=D-M
@0
A=M-1
M=0
@_1
D;JLT
@_2
0;JMP
(_1)
@0
A=M-1
M=-1
(_2)
// If-goto Main.fibonacci$N_LT_2
@0
M=M-1
A=M
D=M
@Main.fibonacci$N_LT_2
D;JGT
@Main.fibonacci$N_GE_2
0;JMP
(Main.fibonacci$N_LT_2)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
(Main.fibonacci$N_GE_2)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Pushing constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// Arithmetic: sub
@0
M=M-1
@0
A=M
D=M
@0
A=M-1
M=M-D
// Calling Main.fibonacci with 1 arguments
@_3
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@1
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(_3)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Pushing constant 1
@1
D=A
@0
A=M
M=D
@0
M=M+1
// Arithmetic: sub
@0
M=M-1
@0
A=M
D=M
@0
A=M-1
M=M-D
// Calling Main.fibonacci with 1 arguments
@_4
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@1
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(_4)
// Arithmetic: add
@0
M=M-1
@0
A=M
D=M
@0
A=M-1
M=D+M
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
@_5
(_5)
0;JMP

// Initializing
@256
D=A
@0
M=D
// Calling Sys.init with 0 arguments
@_1
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@0
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Sys.init
0;JMP
(_1)
// Function Sys.init
(Sys.init)
// Pushing constant 6
@6
D=A
@0
A=M
M=D
@0
M=M+1
// Pushing constant 8
@8
D=A
@0
A=M
M=D
@0
M=M+1
// Calling Class1.set with 2 arguments
@_2
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@2
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Class1.set
0;JMP
(_2)
// Popping to temp 0
@0
M=M-1
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@0
A=M
D=M
@R13
A=M
M=D
// Pushing constant 23
@23
D=A
@0
A=M
M=D
@0
M=M+1
// Pushing constant 15
@15
D=A
@0
A=M
M=D
@0
M=M+1
// Calling Class2.set with 2 arguments
@_3
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@2
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Class2.set
0;JMP
(_3)
// Popping to temp 0
@0
M=M-1
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@0
A=M
D=M
@R13
A=M
M=D
// Calling Class1.get with 0 arguments
@_4
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@0
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Class1.get
0;JMP
(_4)
// Calling Class2.get with 0 arguments
@_5
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@0
D=M
@2
M=D
@0
D=A
@2
M=M-D
@5
D=A
@2
M=M-D
@0
D=M
@1
M=D
@Class2.get
0;JMP
(_5)
(Sys.init$END)
@Sys.init$END
0;JMP
// Function Class1.set
(Class1.set)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Popping to static 0
@0
M=M-1
@0
A=M
D=M
@Class1.0
M=D
// Pushing argument 1
@1
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Popping to static 1
@0
M=M-1
@0
A=M
D=M
@Class1.1
M=D
// Pushing constant 0
@0
D=A
@0
A=M
M=D
@0
M=M+1
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
// Function Class1.get
(Class1.get)
// Pushing static 0
@Class1.0
D=M
@0
A=M
M=D
@0
M=M+1
// Pushing static 1
@Class1.1
D=M
@0
A=M
M=D
@0
M=M+1
// Arithmetic: sub
@0
M=M-1
@0
A=M
D=M
@0
A=M-1
M=M-D
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
// Function Class2.set
(Class2.set)
// Pushing argument 0
@0
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Popping to static 0
@0
M=M-1
@0
A=M
D=M
@Class2.0
M=D
// Pushing argument 1
@1
D=A
@2
A=M
A=D+A
D=M
@0
A=M
M=D
@0
M=M+1
// Popping to static 1
@0
M=M-1
@0
A=M
D=M
@Class2.1
M=D
// Pushing constant 0
@0
D=A
@0
A=M
M=D
@0
M=M+1
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
// Function Class2.get
(Class2.get)
// Pushing static 0
@Class2.0
D=M
@0
A=M
M=D
@0
M=M+1
// Pushing static 1
@Class2.1
D=M
@0
A=M
M=D
@0
M=M+1
// Arithmetic: sub
@0
M=M-1
@0
A=M
D=M
@0
A=M-1
M=M-D
// Returning
@1
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M
@0
M=D+1
@1
D=A
@R13
D=M-D
A=D
D=M
@4
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@3
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@2
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@1
M=D
@R14
A=M
0;JMP
@_6
(_6)
0;JMP
